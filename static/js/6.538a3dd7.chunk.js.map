{"version":3,"sources":["views/Login/Login.js"],"names":["validationSchema","yup","shape","email","required","password","Login","onCreateNewId","history","useHistory","loginMessage","useSelector","loginMessageSelector","handleLogin","React","useCallback","data","push","handleCreateNewId","formik","useFormik","initialValues","onSubmit","className","style","height","handleSubmit","Group","Label","Control","autoFocus","type","id","name","autoComplete","onChange","handleChange","value","values","isInvalid","errors","Feedback","variant","onClick","memo"],"mappings":"kGAAA,sGAQMA,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MAAaE,QAAQC,WAC5BC,SAAUJ,MAAaG,aAGnBE,EAAQ,SAAC,GAAkC,IAAD,IAA/BC,qBAA+B,MAAf,aAAe,EACxCC,EAAUC,cACVC,EAAeC,YAAYC,KAE3BC,EAAcC,IAAMC,aACxB,SAACC,GACCR,EAAQS,KAAK,QAASD,KAExB,CAACR,IAGGU,EAAoBJ,IAAMC,aAAY,WAC1CR,MACC,CAACA,IAEEY,EAASC,YAAU,CACvBC,cAAe,CACblB,MAAO,IAETmB,SAAUT,EACVb,qBAGF,OACE,cAAC,IAAD,CACEuB,UAAU,4BACVC,MAAO,CAAEC,OAAQ,SAFnB,SAIE,eAAC,IAAD,CAAMF,UAAU,QAAQD,SAAUH,EAAOO,aAAzC,UACE,eAAC,IAAKC,MAAN,WACE,cAAC,IAAKC,MAAN,yBACA,cAAC,IAAKC,QAAN,CACEC,WAAW,EACXC,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,aAAa,WACbC,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOmB,OAAOnC,MACrBoC,UAAWpB,EAAOqB,OAAOrC,QAE3B,cAAC,IAAK0B,QAAQY,SAAd,CAAuBV,KAAK,UAA5B,SACGZ,EAAOqB,OAAOrC,WAGnB,eAAC,IAAKwB,MAAN,WACE,cAAC,IAAKC,MAAN,4BACA,cAAC,IAAKC,QAAN,CACEE,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,aAAa,mBACbC,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOmB,OAAOjC,SACrBkC,UAAWpB,EAAOqB,OAAOnC,WAE3B,cAAC,IAAKwB,QAAQY,SAAd,CAAuBV,KAAK,UAA5B,SACGZ,EAAOqB,OAAOnC,cAGnB,cAAC,IAAD,CAAQ4B,KAAK,QAAQF,KAAK,SAASR,UAAU,OAA7C,yBAGA,cAAC,IAAD,CACEmB,QAAQ,YACRT,KAAK,gBACLU,QAASzB,EAHX,mCAOA,sBAAMK,UAAU,mBAAhB,SAAoCb,UAM7BI,cAAM8B,KAAKtC","file":"static/js/6.538a3dd7.chunk.js","sourcesContent":["import { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport * as yup from \"yup\";\r\nimport { loginMessageSelector } from \"../../slices/auth/loginMessage\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  password: yup.string().required(),\r\n});\r\n\r\nconst Login = ({ onCreateNewId = () => {} }) => {\r\n  const history = useHistory();\r\n  const loginMessage = useSelector(loginMessageSelector);\r\n\r\n  const handleLogin = React.useCallback(\r\n    (data) => {\r\n      history.push(\"/auth\", data);\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const handleCreateNewId = React.useCallback(() => {\r\n    onCreateNewId();\r\n  }, [onCreateNewId]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n    },\r\n    onSubmit: handleLogin,\r\n    validationSchema,\r\n  });\r\n\r\n  return (\r\n    <Container\r\n      className=\"d-flex align-items-center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Form className=\"w-100\" onSubmit={formik.handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>Your email</Form.Label>\r\n          <Form.Control\r\n            autoFocus={true}\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"username\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n            isInvalid={formik.errors.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {formik.errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Your password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n            isInvalid={formik.errors.password}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {formik.errors.password}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button name=\"login\" type=\"submit\" className=\"mr-2\">\r\n          Get started\r\n        </Button>\r\n        <Button\r\n          variant=\"secondary\"\r\n          name=\"createaccount\"\r\n          onClick={handleCreateNewId}\r\n        >\r\n          Create new account id\r\n        </Button>\r\n        <span className=\"ml-2 text-danger\">{loginMessage}</span>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default React.memo(Login);\r\n"],"sourceRoot":""}