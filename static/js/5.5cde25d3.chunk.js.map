{"version":3,"sources":["components/MessageView/Message.js","_utils/socket.js","components/MessageView/ChatBox.js","svgs/ui-elements/typing-modal.svg","components/WelcomePanel/index.js","components/MessageView/index.js","components/Contacts/ContactItem.js","components/Contacts/index.js","transformers/contact.js","components/Conversations/index.js","transformers/conversation.js","components/NewContactModal/index.js","components/NewConversationModal/index.js","components/Sidebar/index.js","views/Dashboard/index.js"],"names":["Message","content","fromName","variant","noRadius","props","React","useState","radiusStyle","setRadiusStyle","useEffect","borderRadius","className","style","fontSize","Badge","padding","pill","memo","io","API_URL","ChatBox","setMessages","uuid","useSelector","authSelector","conversationId","selectedsSelector","handleChatSend","useCallback","chatContent","resetForm","prev","nickname","axios","put","sendMessage","then","socket","emit","formik","useFormik","initialValues","onSubmit","Form","handleSubmit","Group","Control","id","name","autoFocus","placeholder","onChange","handleChange","value","values","Button","size","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","points","width","height","rx","ry","transform","cx","cy","r","SvgTypingModal","_ref","svgRef","title","titleId","xmlns","viewBox","ref","undefined","ForwardRef","WelcomePanel","Container","MessageView","messages","useReducer","l","loadData","viewRef","useRef","get","getMessages","result","data","catch","err","console","log","on","current","scrollIntoView","behavior","block","inline","setTimeout","overflowY","map","msg","idx","margin","ContactItem","ListGroup","Item","Contacts","contacts","setContacts","userInfo","refreshSelector","getContacts","isActive","downContacts","savedPeople","error","message","contact","Conversations","conversations","setConversations","dispatch","useDispatch","user","handleClickConversation","conId","setSelectedConversationId","getConversations","userUUID","d","recipients","filter","con","_id","active","cursor","onClick","recipient","validationSchema","yup","shape","userid","required","username","NewContactModal","onHide","handleCreateContact","addContact","triggerRefresh","toast","response","Modal","Header","closeButton","Body","Label","type","isInvalid","errors","Feedback","Footer","form","NewConversationModal","currentUser","selectedContactIds","setSelectedContactIds","handleStartConversation","e","preventDefault","post","startConversation","handleSelectedIdChange","contactId","prevSelectedIds","includes","prevId","Check","label","CONVERSATION_KEY","CONTACT_KEY","SideBar","activeKey","setActiveKey","modalOpen","setModalOpen","isConversationOpen","handleOpenModal","Tab","onSelect","Nav","Link","eventKey","Content","Pane","show","Dashboard","disconnect","Sidebar"],"mappings":"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","file":"static/js/5.5cde25d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nconst Message = ({\r\n  content = \"\",\r\n  fromName = \"\",\r\n  variant = \"primary\",\r\n  noRadius = \"\",\r\n  ...props\r\n}) => {\r\n  const [radiusStyle, setRadiusStyle] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    switch (noRadius) {\r\n      case \"top-left\":\r\n        setRadiusStyle({\r\n          borderRadius: \"5px 20px 20px 20px\",\r\n        });\r\n        break;\r\n\r\n      case \"top-right\":\r\n        setRadiusStyle({\r\n          borderRadius: \"20px 5px 20px 20px\",\r\n        });\r\n        break;\r\n\r\n      case \"bottom-right\":\r\n        setRadiusStyle({\r\n          borderRadius: \"20px 20px 5px 20px\",\r\n        });\r\n        break;\r\n\r\n      case \"bottom-left\":\r\n        setRadiusStyle({\r\n          borderRadius: \"20px 20px 20px 5px\",\r\n        });\r\n        break;\r\n\r\n      case \"right\":\r\n        setRadiusStyle({\r\n          borderRadius: \"20px 5px 5px 20px\",\r\n        });\r\n        break;\r\n\r\n      case \"left\":\r\n        setRadiusStyle({\r\n          borderRadius: \"5px 20px 20px 5px\",\r\n        });\r\n        break;\r\n\r\n      case \"last\":\r\n        setRadiusStyle({\r\n          borderRadius: \"5px 5px 20px 20px\",\r\n        });\r\n        break;\r\n\r\n      default:\r\n        setRadiusStyle({\r\n          borderRadius: \"20px 20px 20px 20px\",\r\n        });\r\n        break;\r\n    }\r\n  }, [noRadius]);\r\n\r\n  return (\r\n    <h5 {...props}>\r\n      {fromName && (\r\n        <span\r\n          className=\"text-muted font-weight-normal mt-1 ml-2 mb-1\"\r\n          style={{ fontSize: \"13px\" }}\r\n        >\r\n          {fromName}\r\n        </span>\r\n      )}\r\n      <Badge\r\n        style={{ padding: \".7rem .7rem\", ...radiusStyle }}\r\n        pill\r\n        className=\"font-weight-normal\"\r\n        variant={variant}\r\n      >\r\n        {content}\r\n      </Badge>\r\n    </h5>\r\n  );\r\n};\r\n\r\nexport default React.memo(Message);\r\n","import { io } from \"socket.io-client\";\r\nimport { API_URL } from \"../api\";\r\n\r\nexport default io(API_URL);\r\n","import axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { IoPaperPlane } from \"react-icons/io5\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { sendMessage } from \"../../api\";\r\nimport { authSelector } from \"../../slices/auth/authSlice\";\r\nimport { selectedsSelector } from \"../../slices/selecteds\";\r\nimport socket from \"../../_utils/socket\";\r\n\r\nconst ChatBox = ({ setMessages = () => {}, ...props }) => {\r\n  const { uuid } = useSelector(authSelector);\r\n  const { conversationId } = useSelector(selectedsSelector);\r\n\r\n  const handleChatSend = React.useCallback(\r\n    ({ chatContent }, { resetForm }) => {\r\n      if (chatContent) {\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          {\r\n            content: chatContent,\r\n            nickname: uuid,\r\n          },\r\n        ]);\r\n        axios\r\n          .put(sendMessage(conversationId), {\r\n            content: chatContent,\r\n            uuid,\r\n          })\r\n          .then(() => {\r\n            socket.emit(\"CLIENT_MESSAGE_SEND\", {\r\n              content: chatContent,\r\n              uuid,\r\n            });\r\n            resetForm();\r\n          });\r\n      }\r\n    },\r\n    [conversationId, setMessages, uuid]\r\n  );\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      chatContent: \"\",\r\n    },\r\n    onSubmit: handleChatSend,\r\n  });\r\n\r\n  return (\r\n    <Form {...props} onSubmit={formik.handleSubmit}>\r\n      <Form.Group className=\"d-flex align-items-center my-3\">\r\n        <Form.Control\r\n          id=\"chatContent\"\r\n          name=\"chatContent\"\r\n          autoFocus={true}\r\n          placeholder=\"Type a message...\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.chatContent}\r\n        />\r\n        <Button\r\n          className=\"p-0 mx-3 mb-1\"\r\n          variant=\"link\"\r\n          size=\"lg\"\r\n          style={{ fontSize: \"1.5rem\" }}\r\n        >\r\n          <IoPaperPlane />\r\n        </Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default React.memo(ChatBox);\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#007BFF;}.cls-2{fill:#fff;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Middle_ground\",\n  \"data-name\": \"Middle ground\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"cls-1\",\n  points: \"101 62.75 86 49.5 101.3 49.5 101 62.75\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  className: \"cls-1\",\n  width: 116,\n  height: 51,\n  rx: 20.68,\n  ry: 20.68,\n  transform: \"translate(116 51) rotate(-180)\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  className: \"cls-2\",\n  cx: 73.5,\n  cy: 25.5,\n  r: 4.5\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  className: \"cls-2\",\n  cx: 58,\n  cy: 25.5,\n  r: 4.5\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  className: \"cls-2\",\n  cx: 42.5,\n  cy: 25.5,\n  r: 4.5\n})));\n\nfunction SvgTypingModal(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 116 62.75\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _ref2, title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"typing-modal\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTypingModal);\nexport default __webpack_public_path__ + \"static/media/typing-modal.4b70892a.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { ReactComponent as Logo } from \"../../svgs/ui-elements/typing-modal.svg\";\r\n\r\nconst WelcomePanel = () => {\r\n  return (\r\n    <Container className=\"h-100 d-flex flex-column align-items-center justify-content-center\">\r\n      <Logo height=\"50px\" />\r\n      Select a conversation to start\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default React.memo(WelcomePanel);\r\n","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectedsSelector } from \"../../slices/selecteds\";\r\nimport { authSelector } from \"../../slices/auth/authSlice\";\r\nimport Message from \"./Message\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport socket from \"../../_utils/socket\";\r\nimport WelcomePanel from \"../WelcomePanel\";\r\nimport { getMessages } from \"../../api\";\r\n\r\nconst MessageView = ({ ...props }) => {\r\n  const { conversationId } = useSelector(selectedsSelector);\r\n  const { uuid } = useSelector(authSelector);\r\n  const [messages, setMessages] = React.useState(null);\r\n  const [l, loadData] = React.useReducer(() => ({}));\r\n  const viewRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (conversationId) {\r\n      axios\r\n        .get(getMessages(conversationId, uuid))\r\n        .then((result) => {\r\n          setMessages(result.data.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else console.log(\"no conversion id\");\r\n  }, [conversationId, uuid, l]);\r\n\r\n  React.useEffect(() => {\r\n    socket.on(\"MESSAGE_INCOMMING\", () => {\r\n      loadData();\r\n      viewRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n        inline: \"nearest\",\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      viewRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n        inline: \"nearest\",\r\n      });\r\n    }, 100);\r\n  }, [messages, conversationId]);\r\n\r\n  return (\r\n    <div {...props}>\r\n      <div\r\n        className=\"flex-grow-1 pl-3 pr-3 d-flex flex-column\"\r\n        style={{ overflowY: \"scroll\" }}\r\n      >\r\n        <div className=\"d-flex flex-column justify-content-end\" ref={viewRef}>\r\n          {messages\r\n            ? (messages.length &&\r\n                messages.map((msg, idx) => (\r\n                  <Message\r\n                    className={`d-flex flex-column align-items-${\r\n                      msg.nickname === uuid ? \"end\" : \"start\"\r\n                    } ${\r\n                      msg.nickname === messages[idx + 1]?.nickname\r\n                        ? \"\"\r\n                        : msg.nickname === messages[idx - 1]?.nickname\r\n                        ? \"\"\r\n                        : \"my-2\"\r\n                    }`}\r\n                    style={{ margin: \"1px 0\" }}\r\n                    noRadius={\r\n                      msg.nickname === uuid\r\n                        ? msg.nickname === messages[idx + 1]?.nickname\r\n                          ? msg.nickname === messages[idx - 1]?.nickname\r\n                            ? \"right\"\r\n                            : \"bottom-right\"\r\n                          : msg.nickname !== messages[idx - 1]?.nickname\r\n                          ? \"single\"\r\n                          : \"top-right\"\r\n                        : msg.nickname === messages[idx + 1]?.nickname\r\n                        ? msg.nickname === messages[idx - 1]?.nickname\r\n                          ? \"left\"\r\n                          : \"bottom-left\"\r\n                        : msg.nickname !== messages[idx - 1]?.nickname\r\n                        ? \"single\"\r\n                        : \"top-left\"\r\n                    }\r\n                    content={msg.content}\r\n                    variant={msg.nickname === uuid ? \"primary\" : \"secondary\"}\r\n                    fromName={\r\n                      msg.nickname ===\r\n                        (messages[idx - 1]?.nickname ||\r\n                          msg.nickname === uuid) ||\r\n                      msg.nickname === uuid ? null : (\r\n                        <span>{msg.nickname}</span>\r\n                      )\r\n                    }\r\n                  />\r\n                ))) || (\r\n                <div className=\"mt-2 text-muted\">\r\n                  <i>Start by sending a message.</i>\r\n                </div>\r\n              )\r\n            : null}\r\n        </div>\r\n      </div>\r\n      {conversationId ? (\r\n        <ChatBox setMessages={setMessages} className=\"pl-3\" />\r\n      ) : (\r\n        <WelcomePanel />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(MessageView);\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nconst ContactItem = ({ nickname = \" \", ...props }) => {\r\n  return <ListGroup.Item {...props}>{nickname}</ListGroup.Item>;\r\n};\r\n\r\nexport default React.memo(ContactItem);\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelector } from \"../../slices/auth/authSlice\";\r\nimport { refreshSelector } from \"../../slices/refresh\";\r\nimport { downContacts } from \"../../transformers/contact\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport { getContacts } from \"../../api\";\r\n\r\nconst Contacts = () => {\r\n  const [contacts, setContacts] = React.useState([]);\r\n  const userInfo = useSelector(authSelector);\r\n  const r = useSelector(refreshSelector);\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(getContacts(userInfo.uuid))\r\n      .then((result) => {\r\n        if (result.data.data) {\r\n          setContacts(downContacts(result.data.data.savedPeople));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.message);\r\n      });\r\n  }, [setContacts, userInfo.uuid, r]);\r\n\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {(contacts &&\r\n        contacts.length &&\r\n        contacts.map((contact, idx) => (\r\n          <ContactItem key={idx} nickname={contact.nickname} />\r\n        ))) || (\r\n        <div className=\"px-3 py-2\">\r\n          <span className=\"text-muted small\">No contacts vailable</span>\r\n        </div>\r\n      )}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default React.memo(Contacts);\r\n","export const downContacts = (collection = []) => {\r\n  return collection.map((data, idx) => ({\r\n    uuid: data.uuid || console.log(\"uuid field not existed!\"),\r\n    nickname: data.nickname || console.log(\"nickname field is not existed!\"),\r\n    isActive: false,\r\n  }));\r\n};\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getConversations } from \"../../api\";\r\nimport { authSelector } from \"../../slices/auth/authSlice\";\r\nimport {\r\n  selectedsSelector,\r\n  setSelectedConversationId,\r\n} from \"../../slices/selecteds\";\r\nimport { downConversation } from \"../../transformers/conversation\";\r\nimport socket from \"../../_utils/socket\";\r\nimport \"./conversations.scss\";\r\n\r\nconst Conversations = () => {\r\n  const [conversations, setConversations] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(authSelector);\r\n  const { conversationId } = useSelector(selectedsSelector);\r\n\r\n  const handleClickConversation = React.useCallback(\r\n    (conId) => {\r\n      dispatch(setSelectedConversationId(conId));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(getConversations(user.uuid))\r\n      .then((result) => {\r\n        setConversations(() =>\r\n          downConversation(result.data.data, user.uuid).map((con) => {\r\n            if (con._id === conversationId) {\r\n              return {\r\n                ...con,\r\n                isActive: true,\r\n              };\r\n            } else\r\n              return {\r\n                ...con,\r\n                isActive: false,\r\n              };\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [conversationId, dispatch, user.uuid]);\r\n\r\n  React.useEffect(() => {\r\n    socket.emit(\"OPEN_CONVERSATION\", {\r\n      conversationId: conversationId,\r\n    });\r\n  }, [conversationId]);\r\n\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {(conversations &&\r\n        conversations.length &&\r\n        conversations.map((con, idx) => (\r\n          <ListGroup.Item\r\n            className=\"ConversationItem\"\r\n            key={idx}\r\n            active={con.isActive}\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => handleClickConversation(con._id)}\r\n          >\r\n            {con.recipients.map((recipient) => {\r\n              if (\r\n                con.recipients.indexOf(recipient) ===\r\n                con.recipients.length - 1\r\n              ) {\r\n                return <>{recipient}</>;\r\n              } else return <>{recipient}, </>;\r\n            })}\r\n          </ListGroup.Item>\r\n        ))) || (\r\n        <div className=\"px-3 py-2\">\r\n          <span className=\"text-muted small\">Currently quiet here...</span>\r\n        </div>\r\n      )}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default React.memo(Conversations);\r\n","export const downConversation = function (data, userUUID) {\r\n  return data.map((d, idx) => ({\r\n    ...d,\r\n    recipients: d.recipients.filter((r) => r !== userUUID),\r\n    isActive: idx === 0 ? true : false,\r\n  }));\r\n};\r\n","import axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as yup from \"yup\";\r\nimport { addContact } from \"../../api\";\r\nimport { authSelector } from \"../../slices/auth/authSlice\";\r\nimport { triggerRefresh } from \"../../slices/refresh\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  userid: yup.string().required(),\r\n  username: yup.string().required(),\r\n});\r\n\r\nconst NewContactModal = ({ onHide = () => {} }) => {\r\n  const { uuid } = useSelector(authSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCreateContact = React.useCallback(\r\n    (data) => {\r\n      axios\r\n        .put(addContact(uuid), {\r\n          uuid: data.userid,\r\n          nickname: data.username,\r\n        })\r\n        .then(() => {\r\n          dispatch(triggerRefresh());\r\n          onHide();\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response.data);\r\n          onHide();\r\n        });\r\n    },\r\n    [dispatch, onHide, uuid]\r\n  );\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      userid: \"\",\r\n      username: \"\",\r\n    },\r\n    onSubmit: handleCreateContact,\r\n    validationSchema,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Modal.Header closeButton>New contact</Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={formik.handleSubmit} id=\"newContactForm\">\r\n          <Form.Group>\r\n            <Form.Label>ID</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              id=\"userid\"\r\n              name=\"userid\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.userid}\r\n              isInvalid={formik.errors.userid}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide an ID\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Recognize name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.username}\r\n              isInvalid={formik.errors.username}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a name for this contact\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button type=\"submit\" form=\"newContactForm\">\r\n          Confirm\r\n        </Button>\r\n        <Button variant=\"outline-secondary\" onClick={onHide}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(NewContactModal);\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getContacts, startConversation } from \"../../api\";\r\nimport { authSelector } from \"../../slices/auth/authSlice\";\r\nimport { setSelectedConversationId } from \"../../slices/selecteds\";\r\n\r\nconst NewConversationModal = ({ onHide = () => {} }) => {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector(authSelector);\r\n  const [selectedContactIds, setSelectedContactIds] = React.useState([]);\r\n  const [contacts, setContacts] = React.useState([]);\r\n\r\n  const handleStartConversation = React.useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      axios\r\n        .post(startConversation(currentUser.uuid), selectedContactIds)\r\n        .then((result) => {\r\n          dispatch(setSelectedConversationId(result.data.data._id));\r\n          onHide();\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err);\r\n        });\r\n    },\r\n    [currentUser.uuid, dispatch, onHide, selectedContactIds]\r\n  );\r\n\r\n  const handleSelectedIdChange = React.useCallback((contactId) => {\r\n    setSelectedContactIds((prevSelectedIds) => {\r\n      if (prevSelectedIds.includes(contactId)) {\r\n        return prevSelectedIds.filter((prevId) => prevId !== contactId);\r\n      } else {\r\n        return [...prevSelectedIds, contactId];\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(getContacts(currentUser.uuid))\r\n      .then((result) => {\r\n        setContacts(result.data.data.savedPeople);\r\n      })\r\n      .catch((err) => {});\r\n  }, [currentUser.uuid]);\r\n\r\n  return (\r\n    <>\r\n      <Modal.Header closeButton>New contact</Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={handleStartConversation} id=\"newContactForm\">\r\n          {(contacts &&\r\n            contacts.length &&\r\n            contacts.map((contact) => (\r\n              <Form.Group key={contact.uuid}>\r\n                <Form.Check\r\n                  label={contact.nickname}\r\n                  name=\"contactId\"\r\n                  value={selectedContactIds.includes(contact.uuid)}\r\n                  onChange={() => handleSelectedIdChange(contact.uuid)}\r\n                />\r\n              </Form.Group>\r\n            ))) || <span className=\"text-muted\">No contacts available!</span>}\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button type=\"submit\" form=\"newContactForm\">\r\n          Start Conversation\r\n        </Button>\r\n        <Button variant=\"outline-secondary\" onClick={onHide}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(NewConversationModal);\r\n","import React from \"react\";\r\nimport { Button, Modal, Nav, Tab } from \"react-bootstrap\";\r\nimport Contacts from \"../Contacts\";\r\nimport Conversations from \"../Conversations\";\r\nimport NewContactModal from \"../NewContactModal\";\r\nimport NewConversationModal from \"../NewConversationModal\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelector } from \"../../slices/auth/authSlice\";\r\n\r\nconst CONVERSATION_KEY = \"conver_key\";\r\nconst CONTACT_KEY = \"contact_key\";\r\n\r\nconst SideBar = ({ ...props }) => {\r\n  const [activeKey, setActiveKey] = React.useState(CONVERSATION_KEY);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n\r\n  const isConversationOpen = activeKey === CONVERSATION_KEY;\r\n  const userInfo = useSelector(authSelector);\r\n\r\n  const handleOpenModal = React.useCallback(() => {\r\n    setModalOpen(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div {...props}>\r\n      <Tab.Container activeKey={activeKey} onSelect={setActiveKey}>\r\n        <Nav variant=\"tabs\">\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={CONVERSATION_KEY}>Conversations</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={CONTACT_KEY}>Contacts</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n\r\n        <Tab.Content className=\"border-right overflow-auto flex-grow-1\">\r\n          <Tab.Pane eventKey={CONVERSATION_KEY}>\r\n            <Conversations />\r\n          </Tab.Pane>\r\n          <Tab.Pane eventKey={CONTACT_KEY}>\r\n            <Contacts />\r\n          </Tab.Pane>\r\n        </Tab.Content>\r\n        <div className=\"p-2 border-top border-right small\">\r\n          UUID <span className=\"text-muted\">{userInfo.uuid}</span>\r\n        </div>\r\n        <Button className=\"rounded-0\" onClick={handleOpenModal}>\r\n          New {isConversationOpen ? \"Conversation\" : \"Contact\"}\r\n        </Button>\r\n      </Tab.Container>\r\n\r\n      <Modal show={modalOpen} onHide={() => setModalOpen(false)}>\r\n        {isConversationOpen ? (\r\n          <NewConversationModal onHide={() => setModalOpen(false)} />\r\n        ) : (\r\n          <NewContactModal onHide={() => setModalOpen(false)} />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SideBar);\r\n","import React from \"react\";\r\nimport MessageView from \"../../components/MessageView\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\nimport socket from \"../../_utils/socket\";\r\n\r\nconst Dashboard = () => {\r\n  React.useEffect(() => {\r\n    return () => socket.disconnect();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container-fluid\" style={{ height: \"100vh\" }}>\r\n      <div className=\"row h-100\">\r\n        <Sidebar className=\"col-xl-3 col-md-4 col-sm-5 pl-0 pr-0 d-flex flex-column h-100\" />\r\n        <MessageView className=\"col-xl-9 col-md-8 col-sm-7 pl-0 pr-0 d-flex flex-column h-100\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Dashboard);\r\n"],"sourceRoot":""}